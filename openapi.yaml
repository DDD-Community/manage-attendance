{
  "swagger": "2.0",
  "info": {
    "title": "DDD Attendance Management API",
    "description": "DDD 커뮤니티 출석 관리를 위한 API 서비스입니다.",
    "termsOfService": "https://www.google.com/policies/terms/",
    "contact": {
      "email": "cfi02222@gmail.com"
    },
    "license": {
      "name": "none"
    },
    "version": "v1"
  },
  "host": "home.ufxpri.dev",
  "schemes": [
    "https"
  ],
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the Bearer scheme. Example: \"Bearer {token}\""
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "paths": {
    "/api/v1/invites/": {
      "post": {
        "operationId": "api_v1_invites_create",
        "summary": "초대 코드 생성",
        "description": "초대 코드를 생성합니다.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InviteCode"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InviteCodeCreateSuccess"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "invites"
        ]
      },
      "parameters": []
    },
    "/api/v1/invites/validate/": {
      "post": {
        "operationId": "api_v1_invites_validate_create",
        "summary": "초대 코드 검증",
        "description": "초대 코드를 검증하여 유효성을 확인합니다.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InviteCodeValidateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InviteCodeValidateSuccess"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "invites"
        ]
      },
      "parameters": []
    },
    "/api/v1/profiles/": {
      "post": {
        "operationId": "api_v1_profiles_create",
        "summary": "프로필 생성",
        "description": "새로운 프로필을 생성합니다.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "profiles"
        ]
      },
      "parameters": []
    },
    "/api/v1/profiles/me/": {
      "get": {
        "operationId": "api_v1_profiles_me_list",
        "summary": "내 프로필 조회",
        "description": "현재 로그인한 사용자의 프로필 정보를 조회합니다.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        },
        "tags": [
          "profiles"
        ]
      },
      "patch": {
        "operationId": "api_v1_profiles_me_partial_update",
        "summary": "내 프로필 수정",
        "description": "현재 로그인한 사용자의 프로필 정보를 부분 업데이트합니다.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "profiles"
        ]
      },
      "parameters": []
    },
    "/api/v1/profiles/{profile_id}/": {
      "get": {
        "operationId": "api_v1_profiles_read",
        "summary": "사용자 프로필 조회",
        "description": "지정된 사용자(profile_id)의 프로필 정보를 조회합니다.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        },
        "tags": [
          "profiles"
        ]
      },
      "parameters": [
        {
          "name": "profile_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/qrcodes/generate/": {
      "post": {
        "operationId": "api_v1_qrcodes_generate_create",
        "summary": "QR 코드 생성",
        "description": "로그인한 사용자의 ID를 JWT로 암호화한 QR 코드를 생성합니다. QR 코드는 생성 후 5분간 유효합니다.",
        "parameters": [],
        "responses": {
          "201": {
            "description": "QR 문자열(JWT) 생성 성공",
            "examples": {
              "application/json": {
                "qr_string": "jwt-token-string"
              }
            }
          }
        },
        "tags": [
          "qr"
        ]
      },
      "parameters": []
    },
    "/api/v1/qrcodes/validate/": {
      "post": {
        "operationId": "api_v1_qrcodes_validate_create",
        "summary": "QR 코드 검증",
        "description": "QR 코드 JWT를 검증하고 사용자 정보를 반환합니다.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "qr_string"
              ],
              "type": "object",
              "properties": {
                "qr_string": {
                  "description": "검증할 JWT QR 문자열",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "QR 코드가 유효한 경우",
            "examples": {
              "application/json": {
                "valid": true,
                "user_id": 1,
                "username": "example"
              }
            }
          },
          "400": {
            "description": "유효하지 않은 QR 코드"
          },
          "410": {
            "description": "QR 코드가 만료된 경우"
          }
        },
        "tags": [
          "qr"
        ]
      },
      "parameters": []
    },
    "/api/v1/schedules/": {
      "get": {
        "operationId": "api_v1_schedules_list",
        "summary": "스케줄 목록 조회",
        "description": "현재 사용자가 참여한 스케줄 목록을 조회합니다.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ScheduleListResponse"
            }
          }
        },
        "tags": [
          "schedule"
        ]
      },
      "post": {
        "operationId": "api_v1_schedules_create",
        "summary": "스케줄 생성",
        "description": "새로운 스케줄을 생성합니다.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ScheduleCreateResponse"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "schedule"
        ]
      },
      "parameters": []
    },
    "/api/v1/schedules/{schedule_id}/": {
      "get": {
        "operationId": "api_v1_schedules_read",
        "summary": "스케줄 상세 조회",
        "description": "특정 스케줄의 상세 정보를 조회합니다.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ScheduleDetailResponse"
            }
          }
        },
        "tags": [
          "schedule"
        ]
      },
      "parameters": [
        {
          "name": "schedule_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/schedules/{schedule_id}/attendances/": {
      "get": {
        "operationId": "api_v1_schedules_attendances_list",
        "summary": "출석 목록 조회",
        "description": "특정 스케줄의 출석 목록을 조회합니다.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AttendanceListResponse"
            }
          }
        },
        "tags": [
          "attendance"
        ]
      },
      "parameters": [
        {
          "name": "schedule_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/v1/schedules/{schedule_id}/attendances/{user_id}/": {
      "get": {
        "operationId": "api_v1_schedules_attendances_read",
        "summary": "출석 상세 조회",
        "description": "특정 사용자의 출석 상세 정보를 조회합니다.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AttendanceDetailResponse"
            }
          }
        },
        "tags": [
          "attendance"
        ]
      },
      "patch": {
        "operationId": "api_v1_schedules_attendances_partial_update",
        "summary": "출석 업데이트",
        "description": "출석 정보를 부분 수정합니다. (스케줄 시작~종료 시간 내에만 업데이트 가능)",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attendance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AttendanceUpdateResponse"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "attendance"
        ]
      },
      "parameters": [
        {
          "name": "schedule_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "user_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/auth/google/callback/": {
      "get": {
        "operationId": "auth_google_callback_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/google/login/": {
      "post": {
        "operationId": "auth_google_login_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SocialLogin"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SocialLogin"
            }
          }
        },
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/google/url/": {
      "get": {
        "operationId": "auth_google_url_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/login/": {
      "post": {
        "operationId": "auth_login_create",
        "description": "Check the credentials and return the REST Token\nif the credentials are valid and authenticated.\nCalls Django Auth login method to register User ID\nin Django session framework\n\nAccept the following POST parameters: username, password\nReturn the REST Framework Token Object's key.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        },
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/logout/": {
      "get": {
        "operationId": "auth_logout_list",
        "summary": "Calls Django logout method and delete the Token object\nassigned to the current User object.",
        "description": "Accepts/Returns nothing.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      },
      "post": {
        "operationId": "auth_logout_create",
        "summary": "Calls Django logout method and delete the Token object\nassigned to the current User object.",
        "description": "Accepts/Returns nothing.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/password/change/": {
      "post": {
        "operationId": "auth_password_change_create",
        "summary": "Calls Django Auth SetPasswordForm save method.",
        "description": "Accepts the following POST parameters: new_password1, new_password2\nReturns the success/fail message.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PasswordChange"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PasswordChange"
            }
          }
        },
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/password/reset/": {
      "post": {
        "operationId": "auth_password_reset_create",
        "summary": "Calls Django Auth PasswordResetForm save method.",
        "description": "Accepts the following POST parameters: email\nReturns the success/fail message.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PasswordReset"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PasswordReset"
            }
          }
        },
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/password/reset/confirm/": {
      "post": {
        "operationId": "auth_password_reset_confirm_create",
        "summary": "Password reset e-mail link is confirmed, therefore\nthis resets the user's password.",
        "description": "Accepts the following POST parameters: token, uid,\n    new_password1, new_password2\nReturns the success/fail message.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PasswordResetConfirm"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PasswordResetConfirm"
            }
          }
        },
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/token/refresh/": {
      "post": {
        "operationId": "auth_token_refresh_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CookieTokenRefresh"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CookieTokenRefresh"
            }
          }
        },
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/token/verify/": {
      "post": {
        "operationId": "auth_token_verify_create",
        "description": "Takes a token and indicates if it is valid.  This view provides no\ninformation about a token's fitness for a particular use.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenVerify"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TokenVerify"
            }
          }
        },
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/user/": {
      "get": {
        "operationId": "auth_user_read",
        "summary": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.",
        "description": "Default accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserDetails"
            }
          }
        },
        "tags": [
          "auth"
        ]
      },
      "put": {
        "operationId": "auth_user_update",
        "summary": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.",
        "description": "Default accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserDetails"
            }
          }
        },
        "tags": [
          "auth"
        ]
      },
      "patch": {
        "operationId": "auth_user_partial_update",
        "summary": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.",
        "description": "Default accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserDetails"
            }
          }
        },
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    }
  },
  "definitions": {
    "InviteCode": {
      "required": [
        "invite_type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "code": {
          "title": "Code",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "invite_type": {
          "title": "Invite type",
          "type": "string",
          "enum": [
            "member",
            "moderator"
          ]
        },
        "used": {
          "title": "Used",
          "type": "boolean",
          "readOnly": true
        },
        "expire_time": {
          "title": "Expire time",
          "type": "string",
          "format": "date-time"
        },
        "one_time_use": {
          "title": "One time use",
          "type": "boolean"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "created_by": {
          "title": "Created by",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "InviteCodeCreateSuccess": {
      "required": [
        "data"
      ],
      "type": "object",
      "properties": {
        "code": {
          "title": "Code",
          "type": "integer",
          "default": 201
        },
        "message": {
          "title": "Message",
          "type": "string",
          "default": "초대 코드가 생성되었습니다.",
          "minLength": 1
        },
        "data": {
          "$ref": "#/definitions/InviteCode"
        }
      }
    },
    "ErrorResponse": {
      "required": [
        "code",
        "message",
        "data"
      ],
      "type": "object",
      "properties": {
        "code": {
          "title": "Code",
          "type": "integer"
        },
        "message": {
          "title": "Message",
          "type": "string",
          "minLength": 1
        },
        "data": {
          "title": "Data",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "InviteCodeValidateRequest": {
      "required": [
        "invite_code"
      ],
      "type": "object",
      "properties": {
        "invite_code": {
          "title": "Invite code",
          "description": "검증할 초대 코드입니다.",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "InviteCodeValidateSuccess": {
      "required": [
        "data"
      ],
      "type": "object",
      "properties": {
        "code": {
          "title": "Code",
          "type": "integer",
          "default": 200
        },
        "message": {
          "title": "Message",
          "type": "string",
          "default": "초대 코드가 유효합니다.",
          "minLength": 1
        },
        "data": {
          "title": "Data",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "User": {
      "required": [
        "username"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "username": {
          "title": "사용자 이름",
          "description": "150자 이하 문자, 숫자 그리고 @/./+/-/_만 가능합니다.",
          "type": "string",
          "pattern": "^[\\w.@+-]+$",
          "maxLength": 150,
          "minLength": 1
        },
        "email": {
          "title": "이메일 주소",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "first_name": {
          "title": "이름",
          "type": "string",
          "maxLength": 150
        },
        "last_name": {
          "title": "성",
          "type": "string",
          "maxLength": 150
        }
      }
    },
    "Profile": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email"
        },
        "password": {
          "title": "Password",
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "invite_code_id": {
          "title": "Invite code id",
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        },
        "role": {
          "title": "Role",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "team": {
          "title": "Team",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "Schedule": {
      "required": [
        "title",
        "description",
        "start_time",
        "end_time"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 200,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "minLength": 1
        },
        "start_time": {
          "title": "Start time",
          "type": "string",
          "format": "date-time"
        },
        "end_time": {
          "title": "End time",
          "type": "string",
          "format": "date-time"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "ScheduleListResponse": {
      "required": [
        "data"
      ],
      "type": "object",
      "properties": {
        "code": {
          "title": "Code",
          "type": "integer",
          "default": 200
        },
        "message": {
          "title": "Message",
          "type": "string",
          "default": "스케줄 목록을 성공적으로 조회했습니다.",
          "minLength": 1
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Schedule"
          }
        }
      }
    },
    "ScheduleCreateResponse": {
      "required": [
        "data"
      ],
      "type": "object",
      "properties": {
        "code": {
          "title": "Code",
          "type": "integer",
          "default": 201
        },
        "message": {
          "title": "Message",
          "type": "string",
          "default": "스케줄이 성공적으로 생성되었습니다.",
          "minLength": 1
        },
        "data": {
          "$ref": "#/definitions/Schedule"
        }
      }
    },
    "ScheduleDetailResponse": {
      "required": [
        "data"
      ],
      "type": "object",
      "properties": {
        "code": {
          "title": "Code",
          "type": "integer",
          "default": 200
        },
        "message": {
          "title": "Message",
          "type": "string",
          "default": "스케줄 상세 정보를 성공적으로 조회했습니다.",
          "minLength": 1
        },
        "data": {
          "$ref": "#/definitions/Schedule"
        }
      }
    },
    "Attendance": {
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "user": {
          "title": "User",
          "type": "integer",
          "readOnly": true
        },
        "user_id": {
          "title": "User id",
          "type": "integer"
        },
        "user_name": {
          "title": "User name",
          "type": "string",
          "readOnly": true
        },
        "schedule": {
          "title": "Schedule",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "schedule_title": {
          "title": "Schedule title",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": [
            "tbd",
            "present",
            "late",
            "absent",
            "exception"
          ]
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "method": {
          "title": "Method",
          "type": "string",
          "enum": [
            "qr",
            "manual"
          ],
          "x-nullable": true
        },
        "note": {
          "title": "Note",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "AttendanceListResponse": {
      "required": [
        "data"
      ],
      "type": "object",
      "properties": {
        "code": {
          "title": "Code",
          "type": "integer",
          "default": 200
        },
        "message": {
          "title": "Message",
          "type": "string",
          "default": "출석 목록을 성공적으로 조회했습니다.",
          "minLength": 1
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attendance"
          }
        }
      }
    },
    "AttendanceDetailResponse": {
      "required": [
        "data"
      ],
      "type": "object",
      "properties": {
        "code": {
          "title": "Code",
          "type": "integer",
          "default": 200
        },
        "message": {
          "title": "Message",
          "type": "string",
          "default": "출석 상세 정보를 성공적으로 조회했습니다.",
          "minLength": 1
        },
        "data": {
          "$ref": "#/definitions/Attendance"
        }
      }
    },
    "AttendanceUpdateResponse": {
      "required": [
        "data"
      ],
      "type": "object",
      "properties": {
        "code": {
          "title": "Code",
          "type": "integer",
          "default": 200
        },
        "message": {
          "title": "Message",
          "type": "string",
          "default": "출석이 성공적으로 업데이트되었습니다.",
          "minLength": 1
        },
        "data": {
          "$ref": "#/definitions/Attendance"
        }
      }
    },
    "SocialLogin": {
      "type": "object",
      "properties": {
        "access_token": {
          "title": "Access token",
          "type": "string"
        },
        "code": {
          "title": "Code",
          "type": "string"
        },
        "id_token": {
          "title": "Id token",
          "type": "string"
        }
      }
    },
    "Login": {
      "required": [
        "password"
      ],
      "type": "object",
      "properties": {
        "username": {
          "title": "Username",
          "type": "string"
        },
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email"
        },
        "password": {
          "title": "Password",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "PasswordChange": {
      "required": [
        "new_password1",
        "new_password2"
      ],
      "type": "object",
      "properties": {
        "new_password1": {
          "title": "New password1",
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "new_password2": {
          "title": "New password2",
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "PasswordReset": {
      "required": [
        "email"
      ],
      "type": "object",
      "properties": {
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "minLength": 1
        }
      }
    },
    "PasswordResetConfirm": {
      "required": [
        "new_password1",
        "new_password2",
        "uid",
        "token"
      ],
      "type": "object",
      "properties": {
        "new_password1": {
          "title": "New password1",
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "new_password2": {
          "title": "New password2",
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "uid": {
          "title": "Uid",
          "type": "string",
          "minLength": 1
        },
        "token": {
          "title": "Token",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "CookieTokenRefresh": {
      "type": "object",
      "properties": {
        "refresh": {
          "title": "Refresh",
          "description": "WIll override cookie.",
          "type": "string",
          "minLength": 1
        },
        "access": {
          "title": "Access",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        }
      }
    },
    "TokenVerify": {
      "required": [
        "token"
      ],
      "type": "object",
      "properties": {
        "token": {
          "title": "Token",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "UserDetails": {
      "required": [
        "username"
      ],
      "type": "object",
      "properties": {
        "pk": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "username": {
          "title": "사용자 이름",
          "description": "150자 이하 문자, 숫자 그리고 @/./+/-/_만 가능합니다.",
          "type": "string",
          "pattern": "^[\\w.@+-]+$",
          "maxLength": 150,
          "minLength": 1
        },
        "email": {
          "title": "이메일 주소",
          "type": "string",
          "format": "email",
          "readOnly": true,
          "minLength": 1
        },
        "first_name": {
          "title": "이름",
          "type": "string",
          "maxLength": 150
        },
        "last_name": {
          "title": "성",
          "type": "string",
          "maxLength": 150
        }
      }
    }
  }
}